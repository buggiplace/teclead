{"version":3,"sources":["src/index.js"],"names":["console","log","radioCards","document","querySelector","bttnPower","getElementById","radioPlayer","currentlyPlayingLabel","selectedRadio","buildCard","radio","name","frequency","image","injectCard","radioCard","innerHTML","addEventListener","classList","toggle","removeLastRuler","lastRuler","parentElement","removeChild","applyCardListeners","cards","querySelectorAll","cardExtensions","forEach","card","children","e","currentTarget","innerText","split","add","remove","cardExtension","fetch","then","resp","json","data","radios"],"mappings":";AACAA,QAAQC,IAAI,gBAIZ,IAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASG,eAAe,cACpCC,EAAcJ,SAASG,eAAe,gBACtCE,EAAwBL,SAASC,cACrC,4BAEIK,EAAgBN,SAASC,cAAc,mBAEvCM,EAAY,SAAAC,GAIyBA,MAAAA,qIAAAA,OAAAA,EAAMC,KACTD,gDAAAA,OAAAA,EAAME,UAILF,oLAAAA,OAAAA,EAAMG,MAR7C,+FAeIC,EAAa,SAAAC,GACjBd,EAAWe,WAAaD,GAI1BX,EAAUa,iBAAiB,QAAS,WAClCX,EAAYY,UAAUC,OAAO,UAC7BZ,EAAsBW,UAAUC,OAAO,eACvCX,EAAcU,UAAUC,OAAO,iBAIjC,IAAMC,EAAkB,WAChBC,IAAAA,EAAYnB,SAASC,cAAc,iBACzCkB,EAAUC,cAAcC,YAAYF,IAIhCG,EAAqB,WACnBC,IAAAA,EAAQvB,SAASwB,iBAAiB,eAClCC,EAAiBzB,SAASwB,iBAAiB,gBAQjDD,EAAMG,QAAQ,SAAAC,GACZA,EAAKC,SAAS,GAAGb,iBAAiB,QAAS,SAAAc,GAGvCA,EAAEC,cAAcC,UAAUC,MAAM,MAAM,KAAO1B,EAAcyB,WAE3D1B,EAAsBW,UAAUiB,IAAI,UACpC3B,EAAcU,UAAUiB,IAAI,UAC5B3B,EAAcyB,UAAY,KAG1B1B,EAAsBW,UAAUkB,OAAO,UACvC5B,EAAcU,UAAUkB,OAAO,UAC/B5B,EAAcyB,UAAYJ,EAAKC,SAAS,GAAGA,SAAS,GAAGG,UAlB3DN,EAAeC,QAAQ,SAAAS,GACrBA,EAAcnB,UAAUiB,IAAI,aAoB5BN,EAAKC,SAAS,GAAGZ,UAAUC,OAAO,eAOxCmB,MAAM,wCACLC,KAAK,SAAAC,GAAQA,OAAAA,EAAKC,SAClBF,KAAK,SAAAG,GACJA,EAAKC,OAAOf,QAAQ,SAAClB,GACnBI,EAAWL,EAAUC,MAEvBU,IACAI","file":"src.effaeca7.js","sourceRoot":"..","sourcesContent":["// say hi\nconsole.log(\"Hello World!\");\n\n\n// load DOM elements\nconst radioCards = document.querySelector(\".radio-cards\");\nconst bttnPower = document.getElementById(\"bttn-power\");\nconst radioPlayer = document.getElementById(\"radio-player\");\nconst currentlyPlayingLabel = document.querySelector(\n  \".currently-playing-label\"\n);\nconst selectedRadio = document.querySelector(\".selected-radio\");\n\nconst buildCard = radio => {\n  return `\n    <div class=\"radio-card\">\n      <div class=\"card-top flex justify-space-between\">\n        <p class=\"radio-title card-text\">${radio.name}</p>\n        <p class=\"radio-fq card-text\">${radio.frequency}</p>\n      </div>\n      <div class=\"card-extend flex justify-space-between hidden\">\n        <img class=\"minus\" src=\"/img/minus.svg\">\n        <img class=\"radio-avatar\" src=\"${radio.image}\">\n        <img class=\"plus\" src=\"/img/plus.svg\">\n      </div>\n    </div>\n    <hr>\n  `;\n};\nconst injectCard = radioCard => {\n  radioCards.innerHTML += radioCard;\n};\n\n// POWER OFF clickevent (close player and flip by 360deg)\nbttnPower.addEventListener(\"click\", () => {\n  radioPlayer.classList.toggle(\"closed\");\n  currentlyPlayingLabel.classList.toggle(\"transparent\");\n  selectedRadio.classList.toggle(\"transparent\");\n});\n\n// remove last horizontal ruler\nconst removeLastRuler = () => {\n  const lastRuler = document.querySelector(\"hr:last-child\");\n  lastRuler.parentElement.removeChild(lastRuler);\n};\n\n// RADIO CARDS CLICK LOGIC\nconst applyCardListeners = () => {\n  const cards = document.querySelectorAll(\".radio-card\");\n  const cardExtensions = document.querySelectorAll(\".card-extend\");\n\n  const closeAllCards = () => {\n    cardExtensions.forEach(cardExtension => {\n      cardExtension.classList.add(\"hidden\");\n    });\n  };\n\n  cards.forEach(card => {\n    card.children[0].addEventListener(\"click\", e => {\n      // radio is already selected -> close clicked radio\n      if (\n        e.currentTarget.innerText.split(\"\\n\")[0] === selectedRadio.innerText\n      ) {\n        currentlyPlayingLabel.classList.add(\"hidden\");\n        selectedRadio.classList.add(\"hidden\");\n        selectedRadio.innerText = \"\";\n        // another radio or no radio selected -> open clicked radio\n      } else {\n        currentlyPlayingLabel.classList.remove(\"hidden\");\n        selectedRadio.classList.remove(\"hidden\");\n        selectedRadio.innerText = card.children[0].children[0].innerText;\n        closeAllCards();\n      }\n      card.children[1].classList.toggle(\"hidden\");\n    });\n  });\n};\n\n\n//TL API\nfetch(\"https://teclead.de/recruiting/radios\")\n.then(resp => resp.json())\n.then(data => {\n  data.radios.forEach((radio) => {\n    injectCard(buildCard(radio));\n  });\n  removeLastRuler();\n  applyCardListeners();\n})\n\n"]}